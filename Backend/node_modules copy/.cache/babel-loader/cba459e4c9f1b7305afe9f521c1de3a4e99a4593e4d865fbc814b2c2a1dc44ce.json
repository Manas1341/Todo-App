{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manas\\\\OneDrive\\\\Desktop\\\\Study Material\\\\Web Developement\\\\React.js\\\\inotebook\\\\src\\\\context\\\\notes\\\\Notestate.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport NoteContext from \"./noteContex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const BASE_URL = process.env.BASE_URL;\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // Get all notes\n  const getnotes = async () => {\n    const response = await fetch(`${BASE_URL}/api/notes/fetchNotes`, {\n      method: 'GET',\n      headers: {\n        'content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    setNotes(json);\n  };\n\n  // Add a note\n  const Addnote = async (title, description, tag) => {\n    const response = await fetch(`${BASE_URL}/api/notes/addNote`, {\n      method: 'POST',\n      headers: {\n        'content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    setNotes(notes.concat(note));\n  };\n\n  // Delete a Note\n  const DeleteNote = async id => {\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  // Edit a note\n  const EditNote = async (id, title, description, tag) => {\n    // API Call\n\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'PUT',\n      headers: {\n        'content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(notes));\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      Addnote,\n      DeleteNote,\n      EditNote,\n      getnotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","BASE_URL","process","env","notesInitial","notes","setNotes","getnotes","response","fetch","method","headers","localStorage","getItem","json","Addnote","title","description","tag","body","JSON","stringify","note","concat","DeleteNote","id","host","console","log","newNotes","filter","_id","EditNote","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/manas/OneDrive/Desktop/Study Material/Web Developement/React.js/inotebook/src/context/notes/Notestate.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport NoteContext from \"./noteContex\";\r\n\r\nconst NoteState = (props) => {\r\n  const BASE_URL = process.env.BASE_URL\r\n  const notesInitial = []\r\n\r\n  const [notes, setNotes] = useState(notesInitial)\r\n\r\n  // Get all notes\r\n  const getnotes = async () => {\r\n\r\n    const response = await fetch(`${BASE_URL}/api/notes/fetchNotes`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-Type': 'application/json',\r\n        'auth-token': localStorage.getItem('token')\r\n      }\r\n    });\r\n    const json = await response.json()\r\n    setNotes(json)\r\n    \r\n  }\r\n\r\n  // Add a note\r\n  const Addnote = async (title, description, tag) => {\r\n\r\n    const response = await fetch(`${BASE_URL}/api/notes/addNote`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-Type': 'application/json',\r\n        'auth-token': localStorage.getItem('token')\r\n      },\r\n      body: JSON.stringify({title, description, tag})\r\n    });\r\n    const note =  await response.json()\r\n    setNotes(notes.concat(note))\r\n  }\r\n\r\n  // Delete a Note\r\n  const DeleteNote =  async (id) => {\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-Type': 'application/json',\r\n        'auth-token': localStorage.getItem('token')\r\n      }\r\n    });\r\n    const json = response.json()\r\n    console.log(json)\r\n    const newNotes = notes.filter((note) => { return note._id !== id })\r\n    setNotes(newNotes)\r\n  }\r\n\r\n  // Edit a note\r\n  const EditNote = async (id, title, description, tag) => {\r\n    // API Call\r\n\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'content-Type': 'application/json',\r\n        'auth-token': localStorage.getItem('token')\r\n      },\r\n      body: JSON.stringify({title, description, tag})\r\n    });\r\n    const json = await response.json()\r\n    console.log(json)\r\n    let newNotes = JSON.parse(JSON.stringify(notes))\r\n\r\n    for (let index = 0; index < newNotes.length; index++) {\r\n      const element = newNotes[index];\r\n      if (element._id === id) {\r\n        newNotes[index].title = title\r\n        newNotes[index].description = description\r\n        newNotes[index].tag = tag\r\n        break;\r\n      }\r\n    }\r\n    setNotes(newNotes)\r\n  }\r\n\r\n  return (\r\n    <NoteContext.Provider value={{ notes, Addnote, DeleteNote, EditNote , getnotes}}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NoteState"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
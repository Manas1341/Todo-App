{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manas\\\\OneDrive\\\\Desktop\\\\Study Material\\\\Web Developement\\\\React.js\\\\inotebook\\\\src\\\\context\\\\notes\\\\Notestate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NoteContext from \"./noteContex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:4000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // Get all notes\n  const getnotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchNotes`, {\n      method: 'GET',\n      headers: {\n        'content-Type': 'application/json',\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlYzNmYTc3ZDU2M2YwNTU2YTRhMTk1In0sImlhdCI6MTY5MzIwNDQ3NH0.Sv7_YgEwG9j1enxUUoDCyewplVr1lbjsZBBFCjFFWjM\"\n      }\n    });\n    const json = await response.json();\n    setNotes(json);\n  };\n\n  // Add a note\n  const Addnote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addNote`, {\n      method: 'POST',\n      headers: {\n        'content-Type': 'application/json',\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlYzNmYTc3ZDU2M2YwNTU2YTRhMTk1In0sImlhdCI6MTY5MzIwNDQ3NH0.Sv7_YgEwG9j1enxUUoDCyewplVr1lbjsZBBFCjFFWjM\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    const note = js;\n    setNotes(notes.concat(note));\n  };\n\n  // Delete a Note\n  const DeleteNote = async id => {\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'content-Type': 'application/json',\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlYzNmYTc3ZDU2M2YwNTU2YTRhMTk1In0sImlhdCI6MTY5MzIwNDQ3NH0.Sv7_YgEwG9j1enxUUoDCyewplVr1lbjsZBBFCjFFWjM\"\n      }\n    });\n    const json = response.json();\n    const newnotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newnotes);\n  };\n\n  // Edit a note\n  const EditNote = async (id, title, description, tag) => {\n    // API Call\n\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'POST',\n      headers: {\n        'content-Type': 'application/json',\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlYzNmYTc3ZDU2M2YwNTU2YTRhMTk1In0sImlhdCI6MTY5MzIwNDQ3NH0.Sv7_YgEwG9j1enxUUoDCyewplVr1lbjsZBBFCjFFWjM\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      setNotes,\n      Addnote,\n      DeleteNote,\n      EditNote,\n      getnotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getnotes","response","fetch","method","headers","json","Addnote","title","description","tag","body","JSON","stringify","note","js","concat","DeleteNote","id","newnotes","filter","_id","EditNote","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/manas/OneDrive/Desktop/Study Material/Web Developement/React.js/inotebook/src/context/notes/Notestate.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport NoteContext from \"./noteContex\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:4000\"\r\n  const notesInitial = []\r\n\r\n  const [notes, setNotes] = useState(notesInitial)\r\n\r\n  // Get all notes\r\n  const getnotes = async () => {\r\n\r\n    const response = await fetch(`${host}/api/notes/fetchNotes`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-Type': 'application/json',\r\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlYzNmYTc3ZDU2M2YwNTU2YTRhMTk1In0sImlhdCI6MTY5MzIwNDQ3NH0.Sv7_YgEwG9j1enxUUoDCyewplVr1lbjsZBBFCjFFWjM\"\r\n      },\r\n    });\r\n    const json = await response.json()\r\n    setNotes(json)\r\n    \r\n  }\r\n\r\n  // Add a note\r\n  const Addnote = async (title, description, tag) => {\r\n\r\n    const response = await fetch(`${host}/api/notes/addNote`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-Type': 'application/json',\r\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlYzNmYTc3ZDU2M2YwNTU2YTRhMTk1In0sImlhdCI6MTY5MzIwNDQ3NH0.Sv7_YgEwG9j1enxUUoDCyewplVr1lbjsZBBFCjFFWjM\"\r\n      },\r\n      body: JSON.stringify({title, description, tag})\r\n    });\r\n    const json = response.json()\r\n    const note = js\r\n    setNotes(notes.concat(note))\r\n  }\r\n\r\n  // Delete a Note\r\n  const DeleteNote =  async (id) => {\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-Type': 'application/json',\r\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlYzNmYTc3ZDU2M2YwNTU2YTRhMTk1In0sImlhdCI6MTY5MzIwNDQ3NH0.Sv7_YgEwG9j1enxUUoDCyewplVr1lbjsZBBFCjFFWjM\"\r\n      },\r\n    });\r\n    const json = response.json()\r\n    const newnotes = notes.filter((note) => { return note._id !== id })\r\n    setNotes(newnotes)\r\n  }\r\n\r\n  // Edit a note\r\n  const EditNote = async (id, title, description, tag) => {\r\n    // API Call\r\n\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-Type': 'application/json',\r\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlYzNmYTc3ZDU2M2YwNTU2YTRhMTk1In0sImlhdCI6MTY5MzIwNDQ3NH0.Sv7_YgEwG9j1enxUUoDCyewplVr1lbjsZBBFCjFFWjM\"\r\n      },\r\n      body: JSON.stringify({title, description, tag})\r\n    });\r\n    const json = response.json()\r\n\r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = notes[index];\r\n      if (element._id === id) {\r\n        element.title = title\r\n        element.description = description\r\n        element.tag = tag\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <NoteContext.Provider value={{ notes, setNotes, Addnote, DeleteNote, EditNote , getnotes}}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NoteState"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}